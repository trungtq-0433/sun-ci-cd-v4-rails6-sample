workspace: true

stages:
  - build
  - test
  - deploy

jobs:
  # Prepare environment
  - name: build:prepare
    stage: build
    image: tqtrung09/ruby2.7.1:latest
    script:
      - bundle _2.1.4_ config set path "vendor/bundle"
      - bundle _2.1.4_ install
    cache:
      - key: vendor_$CI_BRANCH
        paths:
        - vendor/bundle
    only:
      events:
        - pull_request

  # Rspec => https://github.com/rspec/rspec-rails
  - name: test:rspec
    stage: test
    image: tqtrung09/ruby2.7.1:latest
    environment:
      - RAILS_ENV=test # Must specific test environment
      - DATABASE_HOST=mysql_test # Same value line 30
      - DATABASE_USERNAME=mysql_user # Same value line 33
      - DATABASE_PASSWORD=mysql_password # Same value line 34
    services:
      - image: mysql:5.7.32
        name: mysql_test
        environment:
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_USER=mysql_user
          - MYSQL_PASSWORD=mysql_password
          - MYSQL_DATABASE=sun_ci_cd_v4_rails6_sample_test # Same value database test name in database.yml
    before_script:
      - bundle _2.1.4_ config set path "vendor/bundle"
      - bundle _2.1.4_ install
      - bundle _2.1.4_ exec rake db:create
    script:
      - bundle _2.1.4_ exec rspec --format html --out rspec.html
    artifacts:
      name: rspec_report
      paths:
        - rspec.html
      expires_in: 2 days
    only:
      events:
        - pull_request

  # Bundle audit => https://github.com/rubysec/bundler-audit
  - name: test:bundle_audit
    stage: test
    image: tqtrung09/ruby2.7.1:latest
    before_script:
      - bundle _2.1.4_ config set path "vendor/bundle"
      - bundle _2.1.4_ install
    script:
      - bundle _2.1.4_ exec bundle-audit check --update | tee bundle-audit.txt
    artifacts:
      name: bundle_audit_report
      paths:
        - bundle-audit.txt
      expires_in: 2 days
    only:
      events:
        - pull_request

  # Brakeman => https://github.com/presidentbeef/brakeman
  - name: test:brakeman
    stage: test
    image: tqtrung09/ruby2.7.1:latest
    before_script:
      - bundle _2.1.4_ config set path "vendor/bundle"
      - bundle _2.1.4_ install
    script:
      - bundle _2.1.4_ exec brakeman -o brakeman.html
    artifacts:
      name: brakeman_report
      paths:
        - brakeman.html
      expires_in: 2 days
    only:
      events:
        - pull_request

  # Rubocop => https://github.com/rubocop-hq/rubocop
  - name: test:rubocop
    stage: test
    image: tqtrung09/ruby2.7.1:latest
    before_script:
      - bundle _2.1.4_ config set path "vendor/bundle"
      - bundle _2.1.4_ install
    script:
      - bundle _2.1.4_ exec rubocop --format html -o rubocop.html
    artifacts:
      name: rubocop_report
      paths:
        - rubocop.html
      expires_in: 2 days
    only:
      events:
        - pull_request

  - name: deploy:staging
    stage: deploy
    image: tqtrung09/ruby2.7.1:latest
    before_script:
      - mkdir /root/.ssh
      # $STAGING_SSH_PRIVATE_KEY, STAGING_IP, STAGING_USER was set on secret CI tool
      - echo "$STAGING_SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
      - chmod 700 -R /root/.ssh
      - chmod 600 -R /root/.ssh/*
      # Are you sure you want to continue connecting (yes/no)? yes
      # Warning: Permanently added '13.250.3.216' (ECDSA) to the list of known hosts.
      - ssh-keyscan -H $STAGING_IP >> ~/.ssh/known_hosts
    script:
      # Becuz, each script - each session, so we need embed command in single quote
      # (not double quote, becuz "" using variable current computer)
      #
      # Becuz, when using ssh user@ip 'command'. That is non-interactive and non-login shell.
      # So, we need manual pass command to rbenv/rvm by dir /home/deploy/.rbenv/shims/cap
      - ssh -i /root/.ssh/id_rsa $STAGING_USER@$STAGING_IP 'cd /home/deploy/sun-ci-cd-v4-rails6-sample/ && DEPLOY_TYPE=itself DEPLOY_REF=main /home/deploy/.rbenv/shims/cap staging deploy'
    only:
      branches:
        - main # mapping with DEPLOY_REF value
      events:
        - push
